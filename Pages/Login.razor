@page "/login"
@using DNPAssignment.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
           
<AuthorizeView>
    <NotAuthorized>
        <div class="form-group">
            <label>Username :</label>
            <input type="text" placeholder="input username here" @bind-value="username" />
        </div>
        <div class="form-group">
            <label>Password :</label>
            <input type="password" placeholder="input password here" @bind-value="password" />
        </div>
        <div style="color:red">@errorMessage</div>
        <a href="" @onclick="PerformLogin">
            Log in
        </a>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        }
        catch (Exception e) {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e) { }
    }
}
